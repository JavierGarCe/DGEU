{"ast":null,"code":"import { connect } from \"react-redux\";\nimport Dropdown from \"../components/Dropdown\";\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    optios: ownProps.options,\n    title: ownProps.title,\n    collapsed: ownProps.collapsed,\n    icon: ownProps.icon,\n    isGlobal: ownProps.isGlobal\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onOptionCLick: option => {\n    dispatch({\n      type: 'SERVICE',\n      payload: option\n    });\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dropdown);","map":{"version":3,"sources":["/home/javier/Desktop/Master/DGEU/Github Normal/DGEU/src/containers/Dropdown.tsx"],"names":["connect","Dropdown","mapStateToProps","state","ownProps","optios","options","title","collapsed","icon","isGlobal","mapDispatchToProps","dispatch","onOptionCLick","option","type","payload"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAaA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAsBC,QAAtB,KAA6C;AACjE,SAAO;AAACC,IAAAA,MAAM,EAAED,QAAQ,CAACE,OAAlB;AAA2BC,IAAAA,KAAK,EAAEH,QAAQ,CAACG,KAA3C;AAAkDC,IAAAA,SAAS,EAAEJ,QAAQ,CAACI,SAAtE;AAAiFC,IAAAA,IAAI,EAAEL,QAAQ,CAACK,IAAhG;AAAsGC,IAAAA,QAAQ,EAAEN,QAAQ,CAACM;AAAzH,GAAP;AACH,CAFD;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAyB;AAChDC,EAAAA,aAAa,EAAGC,MAAD,IAAoB;AAC/BF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,SAAP;AAAkBC,MAAAA,OAAO,EAAEF;AAA3B,KAAD,CAAR;AACH;AAH+C,CAAzB,CAA3B;;AAMA,eAAed,OAAO,CAACE,eAAD,EAAkBS,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport Dropdown from \"../components/Dropdown\";\nimport IGlobalState from \"../state/globalState\";\nimport { Dispatch } from \"redux\";\nimport { IconDefinition } from '@fortawesome/free-solid-svg-icons';\n\ninterface OwnProps {\n    options: string[];\n    title: string;\n    collapsed: boolean;\n    icon: IconDefinition;\n    isGlobal: boolean; \n}\n\nconst mapStateToProps = (state: IGlobalState, ownProps: OwnProps) => {\n    return({optios: ownProps.options, title: ownProps.title, collapsed: ownProps.collapsed, icon: ownProps.icon, isGlobal: ownProps.isGlobal})\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n    onOptionCLick: (option: string) => {\n        dispatch({type: 'SERVICE', payload: option})    \n    }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dropdown);"]},"metadata":{},"sourceType":"module"}