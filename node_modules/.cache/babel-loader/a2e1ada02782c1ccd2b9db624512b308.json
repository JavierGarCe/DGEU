{"ast":null,"code":"var _jsxFileName = \"/home/javier/Desktop/Master/DGEU/Github Normal/DGEU/src/components/Button.tsx\";\nimport React from 'react';\nimport '../assets/scss/main.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleButton = () => {\n      this.setState({\n        pressed: !!!this.state.pressed\n      });\n    };\n\n    this.state = {\n      pressed: this.props.pressed\n    };\n  }\n\n  render() {\n    const {\n      pressed,\n      size,\n      backgroundColor,\n      label,\n      ...props\n    } = this.props;\n    const mode = this.state.pressed ? 'storybook-button--primary' : 'storybook-button--secondary';\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      type: \"button\",\n      onClick: this.toggleButton,\n      className: ['storybook-button', `storybook-button--${size}`, mode].join(' '),\n      style: {\n        backgroundColor\n      },\n      ...props,\n      children: [this.props.icon != undefined ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: this.props.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 41\n      }, this) : null, ' ' + label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nButton.defaultProps = {\n  primary: false,\n  size: 'medium'\n};\nexport default Button;","map":{"version":3,"sources":["/home/javier/Desktop/Master/DGEU/Github Normal/DGEU/src/components/Button.tsx"],"names":["React","FontAwesomeIcon","Button","Component","constructor","props","toggleButton","setState","pressed","state","render","size","backgroundColor","label","mode","join","icon","undefined","defaultProps","primary"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,0BAAP;AAGA,SAASC,eAAT,QAAgC,gCAAhC;;;AAcA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAiE;AAE/DC,EAAAA,WAAW,CAACC,KAAD,EAAsB;AAC/B,UAAMA,KAAN;;AAD+B,SAU1BC,YAV0B,GAUX,MAAM;AAC1B,WAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,CAAC,CAAC,CAAC,KAAKC,KAAL,CAAWD;AADX,OAAd;AAGD,KAdgC;;AAE/B,SAAKC,KAAL,GAAa;AAAED,MAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG;AAAtB,KAAb;AACD;;AAaME,EAAAA,MAAM,GAAG;AACd,UAAM;AAAEF,MAAAA,OAAF;AAAWG,MAAAA,IAAX;AAAiBC,MAAAA,eAAjB;AAAkCC,MAAAA,KAAlC;AAAyC,SAAGR;AAA5C,QAAsD,KAAKA,KAAjE;AACA,UAAMS,IAAI,GAAG,KAAKL,KAAL,CAAWD,OAAX,GAAqB,2BAArB,GAAmD,6BAAhE;AACA,wBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAE,KAAKF,YAFhB;AAGE,MAAA,SAAS,EAAE,CAAC,kBAAD,EAAsB,qBAAoBK,IAAK,EAA/C,EAAkDG,IAAlD,EAAwDC,IAAxD,CAA6D,GAA7D,CAHb;AAIE,MAAA,KAAK,EAAE;AAAEH,QAAAA;AAAF,OAJT;AAAA,SAKMP,KALN;AAAA,iBAOG,KAAKA,KAAL,CAAWW,IAAX,IAAmBC,SAAnB,gBAA+B,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWW;AAAlC;AAAA;AAAA;AAAA;AAAA,cAA/B,GAA4E,IAP/E,EAQG,MAAMH,KART;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAlC8D;;AAA3DX,M,CAOGgB,Y,GAAe;AACpBC,EAAAA,OAAO,EAAE,KADW;AAEpBR,EAAAA,IAAI,EAAE;AAFc,C;AA8BxB,eAAeT,MAAf","sourcesContent":["import React from 'react';\nimport '../assets/scss/main.scss';\n\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\ninterface IButtonProps {\n  pressed: boolean;\n  backgroundColor?: string;\n  icon?: IconDefinition;\n  size?: 'small' | 'medium' | 'large';\n  label: String;\n}\n\ninterface iButtonState {\n  pressed: boolean;\n}\n\nclass Button extends React.Component<IButtonProps, iButtonState> {\n\n  constructor(props: IButtonProps) {\n    super(props);\n    this.state = { pressed: this.props.pressed }\n  }\n\n  static defaultProps = {\n    primary: false,\n    size: 'medium',\n  }\n\n  public toggleButton = () => {\n    this.setState({\n      pressed: !!!this.state.pressed\n    })\n  }\n\n  public render() {\n    const { pressed, size, backgroundColor, label, ...props } = this.props;\n    const mode = this.state.pressed ? 'storybook-button--primary' : 'storybook-button--secondary';\n    return (\n      <a\n        type=\"button\"\n        onClick={this.toggleButton}\n        className={['storybook-button', `storybook-button--${size}`, mode].join(' ')}\n        style={{ backgroundColor }}\n        {...props}\n      >\n        {this.props.icon != undefined ? <FontAwesomeIcon icon={this.props.icon} /> : null}\n        {' ' + label}\n\n      </a>\n    );\n  }\n}\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}